type Link {
    id: ID!
    url: String!
    description: String
}

type Query {
	#allLinks: [Link]
	#allLinks(filter: LinkFilter): [Link]
  allLinks(filter: LinkFilter, skip: Int = 0, first: Int = 0): [Link]
}

input LinkFilter {
  description_contains: String
  url_contains: String
}

type Mutation {
  createLink(url: String!, description: String!): Link
  createUser(name: String!, authProvider: AuthData!): User
  signinUser(auth: AuthData): SigninPayload
}

type User {
  id: ID!
  name: String!
  email: String
  password: String
}

type SigninPayload {
  token: String
  user: User
}

input AuthData {
  email: String!
  password: String!
}

schema {
  query: Query
  mutation: Mutation
}